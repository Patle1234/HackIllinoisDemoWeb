import * as React from 'react';
import { MultiSelectTreeProps, MultiSelectTreeHandle } from './MultiSelectTreeProps';
/**
 * Represents the PropsContext of the `MultiSelectTree` component.
 * Used for global configuration of all `MultiSelectTree` instances.
 *
 * For more information, refer to the [Dropdowns Props Context]({% slug props-context_dropdowns %}) article.
 */
export declare const MultiSelectTreePropsContext: React.Context<(p: MultiSelectTreeProps) => MultiSelectTreeProps>;
/**
 * Represents the MultiSelectTree component.
 *
 * Accepts properties of type [MultiSelectTreeProps]({% slug api_dropdowns_multiselecttreeprops %}).
 * Obtaining the `ref` returns an object of type [MultiSelectTreeHandle]({% slug api_dropdowns_multiselecttreehandle %}).
 *
 * @example
 * ```jsx
 *   const dataItemKey = 'id';
 *   const checkField = 'checkField';
 *   const checkIndeterminateField = 'checkIndeterminateField';
 *   const subItemsField = 'items';
 *   const expandField = 'expanded';
 *   const textField = 'text';
 *   const fields = {
 *    dataItemKey,
 *    checkField,
 *    checkIndeterminateField,
 *    expandField,
 *    subItemsField,
 *   };
 *   const App = () => {
 *    const [value, setValue] = React.useState([]);
 *    const [expanded, setExpanded] = React.useState([data[0][dataItemKey]]);
 *    const onChange = (event) =>
 *       setValue(
 *       getMultiSelectTreeValue(data, {
 *           ...fields,
 *           ...event,
 *           value,
 *       })
 *       );
 *   const onExpandChange = React.useCallback(
 *       (event) => setExpanded(expandedState(event.item, dataItemKey, expanded)),
 *       [expanded]
 *   );
 *   const treeData = React.useMemo(
 *       () =>
 *       processMultiSelectTreeData(data, {
 *           expanded,
 *           value,
 *           ...fields,
 *       }),
 *       [expanded, value]
 *   );
 *
 *   return (
 *       <div>
 *       <div>Categories:</div>
 *       <MultiSelectTree
 *           style={{
 *           width: '300px',
 *           }}
 *           data={treeData}
 *           value={value}
 *           onChange={onChange}
 *           placeholder="Please select ..."
 *           textField={textField}
 *           dataItemKey={dataItemKey}
 *           checkField={checkField}
 *           checkIndeterminateField={checkIndeterminateField}
 *           expandField={expandField}
 *           subItemsField={subItemsField}
 *           onExpandChange={onExpandChange}
 *       />
 *       </div>
 *   );
 *   };
 *   ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
export declare const MultiSelectTree: React.ForwardRefExoticComponent<MultiSelectTreeProps & React.RefAttributes<MultiSelectTreeHandle | null>>;
